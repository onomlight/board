0 FrontController 모든*.do 를 수신 web.xml 설정완료 (서버재부팅)
1 외부 URL 요청
2 FrontController init 초기화
3 FrontController service() ->req url 가져오기 -> SubController 를 map에서 꺼냄
4 SubController
	1)파라미터 받기
	2)입력값 검증(JS대체가능)
	3)서비스 실행
		service ->dao ->DB처리
	4)View로 이동(포워드/리아디렉트)

	
	07-06
	로그인 / 로그아웃
	1FC(FrontController)에서 "/Login.do" , "LoginController"를 init 호출시 저장
	2LC(LoginController)
		1)파라미터
		2)입력값 확인
		3)서비스 실행
		MemberService -> dao.select(email)
		4)패스워드 일치확인
			->세션객체에 grade 저장
			->세션객체에 email 저장
			
		5)View로 이동
			Main.jsp
			
			
	07-07
1 회원정보 수정
	1FC "/MemberUpdate.do",MemberUpdateController추가
	2MemberUpdateController
		flag == null
			/WEB-INF/member/password.jsp
		flag != null
			1 파라미터 받기(수정예정인 회원정보)
			2 패스워드 체크
			3 패스워드가 일치하면 dto 수정 내용 닫는다
			4 service.MemberUpdate(dto) -> dao.update ->DB수정
			5 req.setAttribute("dto",dto)
			6 /WEB-INF/member/myinfo.jsp
			
			
	07-08
	
	---------------------
	1 필터 설정하기
	---------------------
	1) web.xml 에 filter-url mapping
	   <!-- Filter URL Mapping   -->
	    <filter>
			<filter-name>authority</filter-name>
			<filter-class>com.korea.filter.authfilter</filter-class>    
	    </filter>
	    <filter-mapping>
	 		<filter-name>authority</filter-name>   
	    	<url-pattern>*.do</url-pattern>
	    </filter-mapping>
	2) 패키지생성 , 클래스생성
	com.korea.filter 패키지생성
	com.korea.filter.authfilter 클래스 생성
	authfilter implements Filter
	doFiulter 를 재정의
	
	- 전 (filter - > Controller)
	chain.doFilter(req,resp)
	- 후 (Controller->Filter)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	-------------------------
	2 페이지별 권한 부여
	-------------------------
	0) URL-Grade 저장하기
	init() - > Map 에 URL-Grade 저장
	0 익명 1 일반 2 관리자
	1) 세션에 있는 usergrade 가져오기
	2) URL 별로 pagegrade 가져오기
	3) 권한 설정  


	07-11
	
	1)tbl_
	
	
	게시물받기
	
	select rownum rn,no,title,content,writer,regdate,pwd,count,ip,filename,filesize
	from
	(
    select /*+ INDEX_EDSC (tbl_board PK_NO) */ >> 오라클 힌트
    rownum rn,no,title,content,writer,regdate,pwd,count,ip,filename,filesize
    from tbl_board where rownum<=10 --end
	)
	where rn>=5 --start
	
	
	
	07-12
	
	총페이지수받기
	================
	DAO - select count(*) from tbl_board; ->
	Service ->
	Controller (req.setAttribute()) - >
	view 
	순으로 이동
	
	list.jsp
	전체게시물건수 받기
	전체페이지 계산
	현재페이지 계산~ 
	
	===================
	페이지네이션
	==================
	
	
	- 표시할 페이지 블럭 수
	- 현재 블럭 수 ( 전체 페이지 수)
	
	1)페이지번호 클릭 - > paging(페이지번호) 호출
	2)paging함수 받은 페이지번호를 이용해서 start,end 계산
	3) form(readFrm)에 start,end,nowPage를 저장
	4) 폼 전송 